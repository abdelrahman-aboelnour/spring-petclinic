version: 2.1

            
jobs:
  build:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - run: java --version
      - restore_cache:
          keys: [mvn-dependencies_v1]
      - run: ./mvnw install
      - save_cache:
          paths: [~/.m2]
          key: mvn-dependencies_v1

  lint:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - run: java --version
      - restore_cache:
          keys: [mvn-dependencies_v1]
      - run:
            name: install PMD
            command: |
                cd $HOME
                wget https://github.com/pmd/pmd/releases/download/pmd_releases%2F6.55.0/pmd-bin-6.55.0.zip
                unzip pmd-bin-6.55.0.zip
      - run:
            name: run PMD
            command: |
                # $HOME/pmd-bin-6.55.0/bin/run.sh pmd -d src -R rulesets/java/quickstart.xml -f text
          
  test:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - restore_cache:
          keys: [mvn-dependencies_v1]
      - run: java --version
      - run: ./mvnw test
            
            
  generate-docker-image:
    docker:
        - image: cimg/openjdk:17.0
          auth:
            username: $DOCKERHUB_USER
            password: $DOCKERHUB_PASS
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Verify docker is working
          command: |
            docker version
      - restore_cache:
          keys: [mvn-dependencies_v1]
      - run: ./mvnw spring-boot:build-image
      - run: docker images
      - run: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USER" --password-stdin
            docker tag spring-petclinic:3.0.0-SNAPSHOT abdelrahmanaboelnour/spring-petclinic:3.0.0-SNAPSHOT
      - run: docker push abdelrahmanaboelnour/spring-petclinic:3.0.0-SNAPSHOT

  deploy_kubernetes_cluster:
    docker:
      - image: cimg/aws:2023.01
    steps:
      - checkout
      - run:
          name: Install eksctl
          command: |
            curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
            sudo mv /tmp/eksctl /usr/local/bin
            eksctl version
          no_output_timeout: 30m
      - run:
          name: Deploy EKS Cluster
          command: |
            eksctl create cluster --name petclinic-cluster --region us-east-1 --region us-east-1 --zones us-east-1a,us-east-1b,us-east-1c --node-private-networking
          no_output_timeout: 30m
            
            
  deploy_kubernetes_application:
    docker:
      - image: cimg/aws:2023.01
    steps:
      - checkout
      - run:
          name: Configure AWS to connect to cluster
          command: |
            aws eks update-kubeconfig --name petclinic-cluster --region us-east-1
      - run:
          name: List nodes in cluster
          command: |
            kubectl get nodes
      - run:
          name: Deploy my Application
          command: |
            kubectl delete deployment spring-petclinic
            kubectl create deployment spring-petclinic --image=abdelrahmanaboelnour/spring-petclinic --port=8080
      - run:
          name: List deployments
          command: |
            kubectl get deployments
      - run:
          name: Expose Port of my Applicationn deployment to internet
          command: |
            kubectl delete service spring-petclinic
            kubectl expose deployment spring-petclinic --port=80 --target-port=8080 --type=NodePort
      - run:
          name: Display info about exposed port
          command: |
            kubectl describe service spring-petclinic


  
workflows:
  default:
    jobs:
      - build
      - lint:
         requires: [build]
      - test:
         requires: [lint]
      - generate-docker-image:
         requires: [test]
      - deploy_kubernetes_cluster:
         requires: [generate-docker-image]
      - deploy_kubernetes_application:
         requires: [deploy_kubernetes_cluster]